{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 \fmodern Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel0 \b \fs36 Clipboard Monitor Documentation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Overview\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The {\b Clipboard Monitor} is a powerful tool that automatically detects and processes clipboard content. It supports multiple formats including {\i Markdown} and Mermaid diagrams.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Features\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Core Functionality\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Real-time monitoring} of clipboard changes\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Automatic detection} of content types\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Seamless conversion} between formats\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Supported Formats\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 1.\tx360\tab {\b Markdown} - Converts to rich text format (RTF)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 2.\tx360\tab {\b Mermaid} - Opens diagrams in browser\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 3.\tx360\tab {\b Plain text} - Passes through unchanged\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Installation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Prerequisites\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Before installing, ensure you have: - Python 3.7 or higher - Required dependencies (see {\f1 requirements.txt})\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Quick Start\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 # Clone the repository\line
git clone https://github.com/user/clipboard-monitor.git\line
\line
# Install dependencies\line
pip install -r requirements.txt\line
\line
# Run the monitor\line
python main.py\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Configuration\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The application can be configured through the {\f1 CONFIG} dictionary:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 CONFIG = \{\line
    'notification_title': 'Clipboard Monitor',\line
    'polling_interval': 1.0,\line
    'module_validation_timeout': 5.0\line
\}\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Usage Examples\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Markdown Processing\par}
{\pard \ql \f0 \sa180 \li0 \fi0 When you copy markdown content, it\u8217's automatically converted to RTF:\par}
{\pard \ql \f0 \sa180 \li720 \fi0 {\b Note}: The conversion preserves formatting including {\i italics}, {\b bold}, and {\f1 code blocks}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Code Blocks\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Here\u8217's a Python example:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 def process_clipboard(content):\line
    """Process clipboard content"""\line
    if is_markdown(content):\line
        return convert_to_rtf(content)\line
    return content\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Troubleshooting\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Common Issues\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Module not loading}: Check file permissions\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b Conversion failed}: Ensure pandoc is installed\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\b No notifications}: Verify macOS notification settings\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel2 \b \fs28 Error Messages\par}
{
\trowd \trgaph120
\clbrdrb\brdrs\cellx4320\clbrdrb\brdrs\cellx8640
\trkeep\intbl
{
{{\pard\intbl \ql \f0 \sa0 \li0 \fi0 Error\par}
\cell}
{{\pard\intbl \ql \f0 \sa0 \li0 \fi0 Solution\par}
\cell}
}
\intbl\row}
{
\trowd \trgaph120
\cellx4320\cellx8640
\trkeep\intbl
{
{{\pard\intbl \ql \f0 \sa0 \li0 \fi0 {\f1 pyobjc not found}\par}
\cell}
{{\pard\intbl \ql \f0 \sa0 \li0 \fi0 Install with {\f1 pip install pyobjc-framework-Cocoa}\par}
\cell}
}
\intbl\row}
{
\trowd \trgaph120
\cellx4320\cellx8640
\trkeep\intbl
{
{{\pard\intbl \ql \f0 \sa0 \li0 \fi0 {\f1 pandoc not found}\par}
\cell}
{{\pard\intbl \ql \f0 \sa0 \li0 \fi0 Install with {\f1 brew install pandoc}\par}
\cell}
}
\intbl\row}
{\pard \ql \f0 \sa180 \li0 \fi0 \par}
{\pard \ql \f0 \sa180 \li0 \fi0 \outlinelevel1 \b \fs32 Contributing\par}
{\pard \ql \f0 \sa180 \li0 \fi0 We welcome contributions! Please: 1. Fork the repository 2. Create a feature branch 3. Submit a pull request\par}
{\pard \qc \f0 \sa180 \li0 \fi0 \emdash\emdash\emdash\emdash\emdash\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\i For more information, visit our {\field{\*\fldinst{HYPERLINK "https://github.com/user/clipboard-monitor"}}{\fldrslt{\ul
GitHub repository
}}}
.}\par}
}
